name: Deploy to Render

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Check Render API Key presence
        run: |
          if [ -z "$RENDER_API_KEY" ]; then
            echo "❌ RENDER_API_KEY is not set. Please add it to your repository secrets."
            exit 1
          else
            echo "✅ RENDER_API_KEY is set."
          fi
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}

      - name: Trigger deploy via Render API
        id: trigger_deploy
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
      - name: Trigger Render Deploy
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
         curl -X POST "https://api.render.com/deploy/srv-d34f95ripnbc73fu2jh0" \
          -H "Accept: application/json" \
          -H "Authorization: Bearer $RENDER_API_KEY"

          echo "response_code=$response" >> $GITHUB_OUTPUT

          if [ "$response" -eq 200 ] || [ "$response" -eq 201 ]; then
            echo "✅ Deploy triggered successfully."
          else
            echo "❌ Failed to trigger deploy. HTTP status code: $response"
            exit 1
          fi

      - name: Notify success
        if: success()
        run: echo "✅ Deployment to Render succeeded!"

      - name: Notify failure
        if: failure()
        run: echo "❌ Deployment to Render failed!"

      # Optional Slack notification (uncomment and configure if needed)
      # - name: Slack Notification
      #   if: failure() || success()
      #   uses: slackapi/slack-github-action@v1.23.0
      #   with:
      #     payload: |
      #       {
      #         "text": "Render deployment status: ${{ job.status }} for commit ${{ github.sha }} on branch ${{ github.ref_name }}"
      #       }
      #   env:
      #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      #     SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
